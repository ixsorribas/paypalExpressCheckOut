<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>net.indaba.paypal</groupId>
	<artifactId>PayPalExpressCheckOut</artifactId>
	<packaging>pom</packaging>
	<version>1.0</version>

	<name>PayPalExpressCheckOut Parent Project</name>
	<description>PayPalExpressCheckOut Parent Project</description>

	<properties>

		<!--- Plugin Versions -->
		<version.clean.plugin>2.6.1</version.clean.plugin>
		<version.compiler.plugin>3.3</version.compiler.plugin>
		<version.eclipse.plugin>2.9</version.eclipse.plugin>
		<version.org.eclipse.m2e.lifecycle-mapping>1.0.0</version.org.eclipse.m2e.lifecycle-mapping>
		<version.enforcer.plugin>1.4</version.enforcer.plugin>
		<version.install.plugin>2.5.2</version.install.plugin>
		<version.jar.plugin>2.6</version.jar.plugin>
		<version.resources.plugin>2.7</version.resources.plugin>
		<version.surefire.plugin>2.18.1</version.surefire.plugin>
		<version.failsafe.plugin>${version.surefire.plugin}</version.failsafe.plugin>
		<version.war.plugin>2.6</version.war.plugin>

		<!-- Dependencies Versions -->
		<version.springframework>4.1.6.RELEASE</version.springframework>
		<version.liferay>6.2.3</version.liferay><!-- (Currently based on community for anywhere compilation) -->
		<version.log4j>1.2.17</version.log4j>

		<!-- - Force configuration to not allow IDE to use its own. -->

		<!-- Character Encodings -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- - VersiÃ³n de Java -->
		<java.version>1.8</java.version>

		<!-- - maven-compiler-plugin -->
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<!-- - Allows to redefine compiler parameters to separate between what 
			IDE understands - java version used to write source - and the real version 
			used by maven compiler. By default, the same. -->
		<maven.compiler.argument.target>${maven.compiler.target}</maven.compiler.argument.target>
		<maven.compiler.argument.source>${maven.compiler.source}</maven.compiler.argument.source>

		<!-- - maven-enforcer-plugin -->
		<maven.min.version>3.0.4</maven.min.version>
		<jdk.min.version>${maven.compiler.argument.source}</jdk.min.version>

		<!-- - maven-eclipse-plugin -->
		<downloadSources>true</downloadSources>
	</properties>

	<!-- Minimum maven version enforced -->
	<prerequisites>
		<maven>${maven.min.version}</maven>
	</prerequisites>

	<build>
		<!-- FIX Versions and configuration on plugins -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${version.clean.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.compiler.plugin}</version>
					<configuration>
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
						<source>${maven.compiler.argument.source}</source><!-- Accepted source 
							code version. -->
						<target>${maven.compiler.argument.target}</target><!-- Source code 
							will be compiled for this version. -->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${version.eclipse.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${version.enforcer.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${version.failsafe.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${version.install.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${version.jar.plugin}</version>
					<configuration>
						<archive>
							<index>true</index>
							<manifest>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Java-Version>${java.version}</Java-Version>
								<Java-Vendor>${java.vendor}</Java-Vendor>
								<Os-Name>${os.name}</Os-Name>
								<Os-Arch>${os.arch}</Os-Arch>
								<Os-Version>${os.version}</Os-Version>
								<Scm-Url>${project.scm.url}</Scm-Url>
								<Scm-Connection>${project.scm.connection}</Scm-Connection>
								<Build-Timestamp>${build.datetime}</Build-Timestamp>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${version.resources.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${version.surefire.plugin}</version>
					<configuration>
						<systemProperties>
							<java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
						</systemProperties>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${version.war.plugin}</version>
				</plugin>

				<!-- - This plugin's configuration is used to store Eclipse m2e settings 
					only. - It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${version.org.eclipse.m2e.lifecycle-mapping}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>

								<!-- Configura m2e para que ignore maven-enforcer-plugin. -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.2.1,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>

			<!-- - Checks that Java and Maven versions are equal or greater than required. 
				Executes on maven validation phase. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-java-version</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<message>This project requires at least JDK ${jdk.min.version}.</message>
									<version>${jdk.min.version}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
					<execution>
						<id>enforce-maven-version</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<message>This project requires at least Maven
										${maven.min.version}.</message>
									<version>${maven.min.version}</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<!-- By default, set spring framework main versions -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${version.springframework}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- Default Liferay Versions -->
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>portal-web</artifactId>
				<version>${version.liferay}</version>
			</dependency>
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>portal-client</artifactId>
				<version>${version.liferay}</version>
			</dependency>
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>portal-test</artifactId>
				<version>${version.liferay}</version>
			</dependency>
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>portal-service</artifactId>
				<version>${version.liferay}</version>
			</dependency>
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>portal-pacl</artifactId>
				<version>${version.liferay}</version>
			</dependency>
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>portal-impl</artifactId>
				<version>${version.liferay}</version>
			</dependency>
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>util-taglib</artifactId>
				<version>${version.liferay}</version>
			</dependency>
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>util-slf4j</artifactId>
				<version>${version.liferay}</version>
			</dependency>
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>util-java</artifactId>
				<version>${version.liferay}</version>
			</dependency>
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>util-bridges</artifactId>
				<version>${version.liferay}</version>
			</dependency>
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>support-tomcat</artifactId>
				<version>${version.liferay}</version>
			</dependency>

			<!-- JAX-RS -->
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>2.4.0</version>
			</dependency>
			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>2.0.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-rs-client</artifactId>
				<version>3.1.0</version>
			</dependency>

			<dependency>
				<groupId>javax.portlet</groupId>
				<artifactId>portlet-api</artifactId>
				<version>2.0</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.0.1</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>2.0</version>
			</dependency>

			<!-- LOGGING -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.17</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>javax.portlet</groupId>
			<artifactId>portlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Incluido de forma general para evitar los warnings en los JSP con 
			los tags de los portlets -->
		<dependency>
			<groupId>com.liferay.portal</groupId>
			<artifactId>portal-service</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.liferay.portal</groupId>
			<artifactId>portal-impl</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<modules>
		<module>PayPalExpressCheckOut-portletapp</module>		
		<module>PayPalExpressCheckOut-service</module> 				
	</modules>

</project>